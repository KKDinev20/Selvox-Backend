// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Selvox.DAL.Context;

#nullable disable

namespace Selvox.DAL.Migrations
{
    [DbContext(typeof(SelvoxDbContext))]
    partial class SelvoxDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Selvox.DAL.Models.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<DateTimeOffset>("ApplicationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CoverLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("JobListingId")
                        .HasColumnType("int");

                    b.Property<string>("Resume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ApplicationId")
                        .HasName("PK__Applicat__C93A4C99156A28E6");

                    b.HasIndex("JobListingId");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Selvox.DAL.Models.CareerRecommendation", b =>
                {
                    b.Property<int>("RecommendationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecommendationId"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("JobRoleId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MatchScore")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTimeOffset>("RecommendationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RecommendationId")
                        .HasName("PK__CareerRe__AA15BEE4FD34D332");

                    b.HasIndex("JobRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("CareerRecommendations");
                });

            modelBuilder.Entity("Selvox.DAL.Models.Employer", b =>
                {
                    b.Property<int>("EmployerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployerId"));

                    b.Property<string>("CompanyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("IndustryId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("EmployerId")
                        .HasName("PK__Employer__CA44526164042D7C");

                    b.HasIndex("IndustryId");

                    b.ToTable("Employers");
                });

            modelBuilder.Entity("Selvox.DAL.Models.Industry", b =>
                {
                    b.Property<int>("IndustryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IndustryId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IndustryId")
                        .HasName("PK__Industri__808DEDCCA4CD957D");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("Selvox.DAL.Models.JobListing", b =>
                {
                    b.Property<int>("JobListingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobListingId"));

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("EmployerId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ExpirationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobRoleId")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("PostedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("SalaryRange")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.HasKey("JobListingId")
                        .HasName("PK__JobListi__70B705E0FDA186BF");

                    b.HasIndex("EmployerId");

                    b.HasIndex("JobRoleId");

                    b.ToTable("JobListings");
                });

            modelBuilder.Entity("Selvox.DAL.Models.JobRole", b =>
                {
                    b.Property<int>("JobRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobRoleId"));

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequiredSkills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SalaryRange")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.HasKey("JobRoleId")
                        .HasName("PK__JobRoles__6D8BAC2FBB2A94CD");

                    b.ToTable("JobRoles");
                });

            modelBuilder.Entity("Selvox.DAL.Models.PersonalityAssessment", b =>
                {
                    b.Property<int>("AssessmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssessmentId"));

                    b.Property<DateTimeOffset>("AssessmentDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("Results")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AssessmentId")
                        .HasName("PK__Personal__3D2BF81E1EA2F518");

                    b.HasIndex("UserId");

                    b.ToTable("PersonalityAssessments");
                });

            modelBuilder.Entity("Selvox.DAL.Models.PersonalityQuestion", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId")
                        .HasName("PK__Personal__0DC06FAC021B80BC");

                    b.ToTable("PersonalityQuestions");
                });

            modelBuilder.Entity("Selvox.DAL.Models.PersonalityTestAnswer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerId"));

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobField")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("PersonalityTestAnswers");
                });

            modelBuilder.Entity("Selvox.DAL.Models.PersonalityTestQuestion", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.ToTable("PersonalityTestQuestions");
                });

            modelBuilder.Entity("Selvox.DAL.Models.QuestionJobFieldMapping", b =>
                {
                    b.Property<int>("MappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MappingId"));

                    b.Property<int>("JobFieldId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("MappingId")
                        .HasName("PK__Question__8B57819D8122EF1C");

                    b.HasIndex("JobFieldId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionJobFieldMappings");
                });

            modelBuilder.Entity("Selvox.DAL.Models.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SkillId")
                        .HasName("PK__Skills__DFA09187EDFFCABB");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Selvox.DAL.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4CE72D638B");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053445F43A0E")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Selvox.DAL.Models.UserSkill", b =>
                {
                    b.Property<int>("UserSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserSkillId"));

                    b.Property<DateTimeOffset>("AcquiredDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("ProficiencyLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SkillId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserSkillId")
                        .HasName("PK__UserSkil__2F28BE569EC8242B");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("Selvox.DAL.Models.Application", b =>
                {
                    b.HasOne("Selvox.DAL.Models.JobListing", "JobListing")
                        .WithMany("Applications")
                        .HasForeignKey("JobListingId")
                        .HasConstraintName("FK__Applicati__JobLi__74AE54BC");

                    b.HasOne("Selvox.DAL.Models.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Applicati__UserI__75A278F5");

                    b.Navigation("JobListing");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Selvox.DAL.Models.CareerRecommendation", b =>
                {
                    b.HasOne("Selvox.DAL.Models.JobRole", "JobRole")
                        .WithMany("CareerRecommendations")
                        .HasForeignKey("JobRoleId")
                        .HasConstraintName("FK__CareerRec__JobRo__5AEE82B9");

                    b.HasOne("Selvox.DAL.Models.User", "User")
                        .WithMany("CareerRecommendations")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__CareerRec__UserI__59FA5E80");

                    b.Navigation("JobRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Selvox.DAL.Models.Employer", b =>
                {
                    b.HasOne("Selvox.DAL.Models.Industry", "Industry")
                        .WithMany("Employers")
                        .HasForeignKey("IndustryId")
                        .HasConstraintName("FK__Employers__Indus__6A30C649");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("Selvox.DAL.Models.JobListing", b =>
                {
                    b.HasOne("Selvox.DAL.Models.Employer", "Employer")
                        .WithMany("JobListings")
                        .HasForeignKey("EmployerId")
                        .HasConstraintName("FK__JobListin__Emplo__6EF57B66");

                    b.HasOne("Selvox.DAL.Models.JobRole", "JobRole")
                        .WithMany("JobListings")
                        .HasForeignKey("JobRoleId")
                        .HasConstraintName("FK__JobListin__JobRo__6FE99F9F");

                    b.Navigation("Employer");

                    b.Navigation("JobRole");
                });

            modelBuilder.Entity("Selvox.DAL.Models.PersonalityAssessment", b =>
                {
                    b.HasOne("Selvox.DAL.Models.User", "User")
                        .WithMany("PersonalityAssessments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Personali__UserI__4F7CD00D");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Selvox.DAL.Models.PersonalityTestAnswer", b =>
                {
                    b.HasOne("Selvox.DAL.Models.PersonalityTestQuestion", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Selvox.DAL.Models.QuestionJobFieldMapping", b =>
                {
                    b.HasOne("Selvox.DAL.Models.JobRole", "JobField")
                        .WithMany("QuestionJobFieldMappings")
                        .HasForeignKey("JobFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__QuestionJ__JobFi__18EBB532");

                    b.HasOne("Selvox.DAL.Models.PersonalityQuestion", "Question")
                        .WithMany("QuestionJobFieldMappings")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK__QuestionJ__Quest__17F790F9");

                    b.Navigation("JobField");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Selvox.DAL.Models.UserSkill", b =>
                {
                    b.HasOne("Selvox.DAL.Models.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .HasConstraintName("FK__UserSkill__Skill__6383C8BA");

                    b.HasOne("Selvox.DAL.Models.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserSkill__UserI__628FA481");

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Selvox.DAL.Models.Employer", b =>
                {
                    b.Navigation("JobListings");
                });

            modelBuilder.Entity("Selvox.DAL.Models.Industry", b =>
                {
                    b.Navigation("Employers");
                });

            modelBuilder.Entity("Selvox.DAL.Models.JobListing", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Selvox.DAL.Models.JobRole", b =>
                {
                    b.Navigation("CareerRecommendations");

                    b.Navigation("JobListings");

                    b.Navigation("QuestionJobFieldMappings");
                });

            modelBuilder.Entity("Selvox.DAL.Models.PersonalityQuestion", b =>
                {
                    b.Navigation("QuestionJobFieldMappings");
                });

            modelBuilder.Entity("Selvox.DAL.Models.PersonalityTestQuestion", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("Selvox.DAL.Models.Skill", b =>
                {
                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("Selvox.DAL.Models.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("CareerRecommendations");

                    b.Navigation("PersonalityAssessments");

                    b.Navigation("UserSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
